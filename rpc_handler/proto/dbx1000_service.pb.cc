// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dbx1000_service.proto

#include "dbx1000_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace dbx1000 {
class LockGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LockGetRequest>
      _instance;
} _LockGetRequest_default_instance_;
class LockGetReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LockGetReply>
      _instance;
} _LockGetReply_default_instance_;
class LockDowngradeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LockDowngradeRequest>
      _instance;
} _LockDowngradeRequest_default_instance_;
class LockDowngradeReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LockDowngradeReply>
      _instance;
} _LockDowngradeReply_default_instance_;
class LockInvalidRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LockInvalidRequest>
      _instance;
} _LockInvalidRequest_default_instance_;
class LockInvalidReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LockInvalidReply>
      _instance;
} _LockInvalidReply_default_instance_;
}  // namespace dbx1000
namespace protobuf_dbx1000_5fservice_2eproto {
static void InitDefaultsLockGetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dbx1000::_LockGetRequest_default_instance_;
    new (ptr) ::dbx1000::LockGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dbx1000::LockGetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LockGetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLockGetRequest}, {}};

static void InitDefaultsLockGetReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dbx1000::_LockGetReply_default_instance_;
    new (ptr) ::dbx1000::LockGetReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dbx1000::LockGetReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LockGetReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLockGetReply}, {}};

static void InitDefaultsLockDowngradeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dbx1000::_LockDowngradeRequest_default_instance_;
    new (ptr) ::dbx1000::LockDowngradeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dbx1000::LockDowngradeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LockDowngradeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLockDowngradeRequest}, {}};

static void InitDefaultsLockDowngradeReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dbx1000::_LockDowngradeReply_default_instance_;
    new (ptr) ::dbx1000::LockDowngradeReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dbx1000::LockDowngradeReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LockDowngradeReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLockDowngradeReply}, {}};

static void InitDefaultsLockInvalidRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dbx1000::_LockInvalidRequest_default_instance_;
    new (ptr) ::dbx1000::LockInvalidRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dbx1000::LockInvalidRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LockInvalidRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLockInvalidRequest}, {}};

static void InitDefaultsLockInvalidReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dbx1000::_LockInvalidReply_default_instance_;
    new (ptr) ::dbx1000::LockInvalidReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dbx1000::LockInvalidReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LockInvalidReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLockInvalidReply}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LockGetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LockGetReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LockDowngradeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LockDowngradeReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LockInvalidRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LockInvalidReply.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockGetRequest, instance_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockGetRequest, page_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockGetRequest, mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockGetReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockGetReply, rc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockGetReply, page_buf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockDowngradeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockDowngradeRequest, page_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockDowngradeRequest, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockDowngradeRequest, to_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockDowngradeReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockDowngradeReply, rc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockDowngradeReply, page_buf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockInvalidRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockInvalidRequest, page_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockInvalidReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbx1000::LockInvalidReply, rc_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dbx1000::LockGetRequest)},
  { 8, -1, sizeof(::dbx1000::LockGetReply)},
  { 15, -1, sizeof(::dbx1000::LockDowngradeRequest)},
  { 23, -1, sizeof(::dbx1000::LockDowngradeReply)},
  { 30, -1, sizeof(::dbx1000::LockInvalidRequest)},
  { 36, -1, sizeof(::dbx1000::LockInvalidReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dbx1000::_LockGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dbx1000::_LockGetReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dbx1000::_LockDowngradeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dbx1000::_LockDowngradeReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dbx1000::_LockInvalidRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dbx1000::_LockInvalidReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "dbx1000_service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025dbx1000_service.proto\022\007dbx1000\"Z\n\016Lock"
      "GetRequest\022\023\n\013instance_id\030\001 \001(\005\022\017\n\007page_"
      "id\030\002 \001(\004\022\"\n\004mode\030\003 \001(\0162\024.dbx1000.RpcLock"
      "Mode\",\n\014LockGetReply\022\n\n\002rc\030\001 \001(\010\022\020\n\010page"
      "_buf\030\002 \001(\014\"m\n\024LockDowngradeRequest\022\017\n\007pa"
      "ge_id\030\001 \001(\004\022\"\n\004from\030\002 \001(\0162\024.dbx1000.RpcL"
      "ockMode\022 \n\002to\030\003 \001(\0162\024.dbx1000.RpcLockMod"
      "e\"2\n\022LockDowngradeReply\022\n\n\002rc\030\001 \001(\010\022\020\n\010p"
      "age_buf\030\002 \001(\014\"%\n\022LockInvalidRequest\022\017\n\007p"
      "age_id\030\001 \001(\004\"\036\n\020LockInvalidReply\022\n\n\002rc\030\001"
      " \001(\010*)\n\013RpcLockMode\022\005\n\001O\020\000\022\005\n\001S\020\001\022\005\n\001P\020\002"
      "\022\005\n\001X\020\0032\345\001\n\016DBx1000Service\022;\n\007LockGet\022\027."
      "dbx1000.LockGetRequest\032\025.dbx1000.LockGet"
      "Reply\"\000\022M\n\rLockDowngrade\022\035.dbx1000.LockD"
      "owngradeRequest\032\033.dbx1000.LockDowngradeR"
      "eply\"\000\022G\n\013LockInvalid\022\033.dbx1000.LockInva"
      "lidRequest\032\031.dbx1000.LockInvalidReply\"\000b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 687);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dbx1000_service.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_dbx1000_5fservice_2eproto
namespace dbx1000 {
const ::google::protobuf::EnumDescriptor* RpcLockMode_descriptor() {
  protobuf_dbx1000_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dbx1000_5fservice_2eproto::file_level_enum_descriptors[0];
}
bool RpcLockMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void LockGetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockGetRequest::kInstanceIdFieldNumber;
const int LockGetRequest::kPageIdFieldNumber;
const int LockGetRequest::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockGetRequest::LockGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dbx1000_5fservice_2eproto::scc_info_LockGetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dbx1000.LockGetRequest)
}
LockGetRequest::LockGetRequest(const LockGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&page_id_, &from.page_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&page_id_)) + sizeof(mode_));
  // @@protoc_insertion_point(copy_constructor:dbx1000.LockGetRequest)
}

void LockGetRequest::SharedCtor() {
  ::memset(&page_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mode_) -
      reinterpret_cast<char*>(&page_id_)) + sizeof(mode_));
}

LockGetRequest::~LockGetRequest() {
  // @@protoc_insertion_point(destructor:dbx1000.LockGetRequest)
  SharedDtor();
}

void LockGetRequest::SharedDtor() {
}

void LockGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LockGetRequest::descriptor() {
  ::protobuf_dbx1000_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dbx1000_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockGetRequest& LockGetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dbx1000_5fservice_2eproto::scc_info_LockGetRequest.base);
  return *internal_default_instance();
}


void LockGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dbx1000.LockGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&page_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mode_) -
      reinterpret_cast<char*>(&page_id_)) + sizeof(mode_));
  _internal_metadata_.Clear();
}

bool LockGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dbx1000.LockGetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 instance_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instance_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 page_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &page_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dbx1000.RpcLockMode mode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::dbx1000::RpcLockMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dbx1000.LockGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dbx1000.LockGetRequest)
  return false;
#undef DO_
}

void LockGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dbx1000.LockGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 instance_id = 1;
  if (this->instance_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->instance_id(), output);
  }

  // uint64 page_id = 2;
  if (this->page_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->page_id(), output);
  }

  // .dbx1000.RpcLockMode mode = 3;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dbx1000.LockGetRequest)
}

::google::protobuf::uint8* LockGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dbx1000.LockGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 instance_id = 1;
  if (this->instance_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->instance_id(), target);
  }

  // uint64 page_id = 2;
  if (this->page_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->page_id(), target);
  }

  // .dbx1000.RpcLockMode mode = 3;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dbx1000.LockGetRequest)
  return target;
}

size_t LockGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dbx1000.LockGetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 page_id = 2;
  if (this->page_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->page_id());
  }

  // int32 instance_id = 1;
  if (this->instance_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->instance_id());
  }

  // .dbx1000.RpcLockMode mode = 3;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LockGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dbx1000.LockGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LockGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dbx1000.LockGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dbx1000.LockGetRequest)
    MergeFrom(*source);
  }
}

void LockGetRequest::MergeFrom(const LockGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dbx1000.LockGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_id() != 0) {
    set_page_id(from.page_id());
  }
  if (from.instance_id() != 0) {
    set_instance_id(from.instance_id());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void LockGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dbx1000.LockGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockGetRequest::CopyFrom(const LockGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dbx1000.LockGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockGetRequest::IsInitialized() const {
  return true;
}

void LockGetRequest::Swap(LockGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockGetRequest::InternalSwap(LockGetRequest* other) {
  using std::swap;
  swap(page_id_, other->page_id_);
  swap(instance_id_, other->instance_id_);
  swap(mode_, other->mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LockGetRequest::GetMetadata() const {
  protobuf_dbx1000_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dbx1000_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LockGetReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockGetReply::kRcFieldNumber;
const int LockGetReply::kPageBufFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockGetReply::LockGetReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dbx1000_5fservice_2eproto::scc_info_LockGetReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dbx1000.LockGetReply)
}
LockGetReply::LockGetReply(const LockGetReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  page_buf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_buf().size() > 0) {
    page_buf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_buf_);
  }
  rc_ = from.rc_;
  // @@protoc_insertion_point(copy_constructor:dbx1000.LockGetReply)
}

void LockGetReply::SharedCtor() {
  page_buf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rc_ = false;
}

LockGetReply::~LockGetReply() {
  // @@protoc_insertion_point(destructor:dbx1000.LockGetReply)
  SharedDtor();
}

void LockGetReply::SharedDtor() {
  page_buf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LockGetReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LockGetReply::descriptor() {
  ::protobuf_dbx1000_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dbx1000_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockGetReply& LockGetReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dbx1000_5fservice_2eproto::scc_info_LockGetReply.base);
  return *internal_default_instance();
}


void LockGetReply::Clear() {
// @@protoc_insertion_point(message_clear_start:dbx1000.LockGetReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rc_ = false;
  _internal_metadata_.Clear();
}

bool LockGetReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dbx1000.LockGetReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool rc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes page_buf = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_page_buf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dbx1000.LockGetReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dbx1000.LockGetReply)
  return false;
#undef DO_
}

void LockGetReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dbx1000.LockGetReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool rc = 1;
  if (this->rc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->rc(), output);
  }

  // bytes page_buf = 2;
  if (this->page_buf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->page_buf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dbx1000.LockGetReply)
}

::google::protobuf::uint8* LockGetReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dbx1000.LockGetReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool rc = 1;
  if (this->rc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->rc(), target);
  }

  // bytes page_buf = 2;
  if (this->page_buf().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->page_buf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dbx1000.LockGetReply)
  return target;
}

size_t LockGetReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dbx1000.LockGetReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes page_buf = 2;
  if (this->page_buf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->page_buf());
  }

  // bool rc = 1;
  if (this->rc() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LockGetReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dbx1000.LockGetReply)
  GOOGLE_DCHECK_NE(&from, this);
  const LockGetReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockGetReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dbx1000.LockGetReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dbx1000.LockGetReply)
    MergeFrom(*source);
  }
}

void LockGetReply::MergeFrom(const LockGetReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dbx1000.LockGetReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_buf().size() > 0) {

    page_buf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_buf_);
  }
  if (from.rc() != 0) {
    set_rc(from.rc());
  }
}

void LockGetReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dbx1000.LockGetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockGetReply::CopyFrom(const LockGetReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dbx1000.LockGetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockGetReply::IsInitialized() const {
  return true;
}

void LockGetReply::Swap(LockGetReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockGetReply::InternalSwap(LockGetReply* other) {
  using std::swap;
  page_buf_.Swap(&other->page_buf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rc_, other->rc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LockGetReply::GetMetadata() const {
  protobuf_dbx1000_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dbx1000_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LockDowngradeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockDowngradeRequest::kPageIdFieldNumber;
const int LockDowngradeRequest::kFromFieldNumber;
const int LockDowngradeRequest::kToFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockDowngradeRequest::LockDowngradeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dbx1000_5fservice_2eproto::scc_info_LockDowngradeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dbx1000.LockDowngradeRequest)
}
LockDowngradeRequest::LockDowngradeRequest(const LockDowngradeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&page_id_, &from.page_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&to_) -
    reinterpret_cast<char*>(&page_id_)) + sizeof(to_));
  // @@protoc_insertion_point(copy_constructor:dbx1000.LockDowngradeRequest)
}

void LockDowngradeRequest::SharedCtor() {
  ::memset(&page_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_) -
      reinterpret_cast<char*>(&page_id_)) + sizeof(to_));
}

LockDowngradeRequest::~LockDowngradeRequest() {
  // @@protoc_insertion_point(destructor:dbx1000.LockDowngradeRequest)
  SharedDtor();
}

void LockDowngradeRequest::SharedDtor() {
}

void LockDowngradeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LockDowngradeRequest::descriptor() {
  ::protobuf_dbx1000_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dbx1000_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockDowngradeRequest& LockDowngradeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dbx1000_5fservice_2eproto::scc_info_LockDowngradeRequest.base);
  return *internal_default_instance();
}


void LockDowngradeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dbx1000.LockDowngradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&page_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_) -
      reinterpret_cast<char*>(&page_id_)) + sizeof(to_));
  _internal_metadata_.Clear();
}

bool LockDowngradeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dbx1000.LockDowngradeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 page_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &page_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dbx1000.RpcLockMode from = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_from(static_cast< ::dbx1000::RpcLockMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dbx1000.RpcLockMode to = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_to(static_cast< ::dbx1000::RpcLockMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dbx1000.LockDowngradeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dbx1000.LockDowngradeRequest)
  return false;
#undef DO_
}

void LockDowngradeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dbx1000.LockDowngradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 page_id = 1;
  if (this->page_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->page_id(), output);
  }

  // .dbx1000.RpcLockMode from = 2;
  if (this->from() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->from(), output);
  }

  // .dbx1000.RpcLockMode to = 3;
  if (this->to() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->to(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dbx1000.LockDowngradeRequest)
}

::google::protobuf::uint8* LockDowngradeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dbx1000.LockDowngradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 page_id = 1;
  if (this->page_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->page_id(), target);
  }

  // .dbx1000.RpcLockMode from = 2;
  if (this->from() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->from(), target);
  }

  // .dbx1000.RpcLockMode to = 3;
  if (this->to() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->to(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dbx1000.LockDowngradeRequest)
  return target;
}

size_t LockDowngradeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dbx1000.LockDowngradeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 page_id = 1;
  if (this->page_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->page_id());
  }

  // .dbx1000.RpcLockMode from = 2;
  if (this->from() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->from());
  }

  // .dbx1000.RpcLockMode to = 3;
  if (this->to() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->to());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LockDowngradeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dbx1000.LockDowngradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LockDowngradeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockDowngradeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dbx1000.LockDowngradeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dbx1000.LockDowngradeRequest)
    MergeFrom(*source);
  }
}

void LockDowngradeRequest::MergeFrom(const LockDowngradeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dbx1000.LockDowngradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_id() != 0) {
    set_page_id(from.page_id());
  }
  if (from.from() != 0) {
    set_from(from.from());
  }
  if (from.to() != 0) {
    set_to(from.to());
  }
}

void LockDowngradeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dbx1000.LockDowngradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockDowngradeRequest::CopyFrom(const LockDowngradeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dbx1000.LockDowngradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockDowngradeRequest::IsInitialized() const {
  return true;
}

void LockDowngradeRequest::Swap(LockDowngradeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockDowngradeRequest::InternalSwap(LockDowngradeRequest* other) {
  using std::swap;
  swap(page_id_, other->page_id_);
  swap(from_, other->from_);
  swap(to_, other->to_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LockDowngradeRequest::GetMetadata() const {
  protobuf_dbx1000_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dbx1000_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LockDowngradeReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockDowngradeReply::kRcFieldNumber;
const int LockDowngradeReply::kPageBufFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockDowngradeReply::LockDowngradeReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dbx1000_5fservice_2eproto::scc_info_LockDowngradeReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dbx1000.LockDowngradeReply)
}
LockDowngradeReply::LockDowngradeReply(const LockDowngradeReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  page_buf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_buf().size() > 0) {
    page_buf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_buf_);
  }
  rc_ = from.rc_;
  // @@protoc_insertion_point(copy_constructor:dbx1000.LockDowngradeReply)
}

void LockDowngradeReply::SharedCtor() {
  page_buf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rc_ = false;
}

LockDowngradeReply::~LockDowngradeReply() {
  // @@protoc_insertion_point(destructor:dbx1000.LockDowngradeReply)
  SharedDtor();
}

void LockDowngradeReply::SharedDtor() {
  page_buf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LockDowngradeReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LockDowngradeReply::descriptor() {
  ::protobuf_dbx1000_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dbx1000_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockDowngradeReply& LockDowngradeReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dbx1000_5fservice_2eproto::scc_info_LockDowngradeReply.base);
  return *internal_default_instance();
}


void LockDowngradeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:dbx1000.LockDowngradeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rc_ = false;
  _internal_metadata_.Clear();
}

bool LockDowngradeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dbx1000.LockDowngradeReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool rc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes page_buf = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_page_buf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dbx1000.LockDowngradeReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dbx1000.LockDowngradeReply)
  return false;
#undef DO_
}

void LockDowngradeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dbx1000.LockDowngradeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool rc = 1;
  if (this->rc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->rc(), output);
  }

  // bytes page_buf = 2;
  if (this->page_buf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->page_buf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dbx1000.LockDowngradeReply)
}

::google::protobuf::uint8* LockDowngradeReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dbx1000.LockDowngradeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool rc = 1;
  if (this->rc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->rc(), target);
  }

  // bytes page_buf = 2;
  if (this->page_buf().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->page_buf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dbx1000.LockDowngradeReply)
  return target;
}

size_t LockDowngradeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dbx1000.LockDowngradeReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes page_buf = 2;
  if (this->page_buf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->page_buf());
  }

  // bool rc = 1;
  if (this->rc() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LockDowngradeReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dbx1000.LockDowngradeReply)
  GOOGLE_DCHECK_NE(&from, this);
  const LockDowngradeReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockDowngradeReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dbx1000.LockDowngradeReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dbx1000.LockDowngradeReply)
    MergeFrom(*source);
  }
}

void LockDowngradeReply::MergeFrom(const LockDowngradeReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dbx1000.LockDowngradeReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_buf().size() > 0) {

    page_buf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_buf_);
  }
  if (from.rc() != 0) {
    set_rc(from.rc());
  }
}

void LockDowngradeReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dbx1000.LockDowngradeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockDowngradeReply::CopyFrom(const LockDowngradeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dbx1000.LockDowngradeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockDowngradeReply::IsInitialized() const {
  return true;
}

void LockDowngradeReply::Swap(LockDowngradeReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockDowngradeReply::InternalSwap(LockDowngradeReply* other) {
  using std::swap;
  page_buf_.Swap(&other->page_buf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rc_, other->rc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LockDowngradeReply::GetMetadata() const {
  protobuf_dbx1000_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dbx1000_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LockInvalidRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockInvalidRequest::kPageIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockInvalidRequest::LockInvalidRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dbx1000_5fservice_2eproto::scc_info_LockInvalidRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dbx1000.LockInvalidRequest)
}
LockInvalidRequest::LockInvalidRequest(const LockInvalidRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  page_id_ = from.page_id_;
  // @@protoc_insertion_point(copy_constructor:dbx1000.LockInvalidRequest)
}

void LockInvalidRequest::SharedCtor() {
  page_id_ = GOOGLE_ULONGLONG(0);
}

LockInvalidRequest::~LockInvalidRequest() {
  // @@protoc_insertion_point(destructor:dbx1000.LockInvalidRequest)
  SharedDtor();
}

void LockInvalidRequest::SharedDtor() {
}

void LockInvalidRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LockInvalidRequest::descriptor() {
  ::protobuf_dbx1000_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dbx1000_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockInvalidRequest& LockInvalidRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dbx1000_5fservice_2eproto::scc_info_LockInvalidRequest.base);
  return *internal_default_instance();
}


void LockInvalidRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dbx1000.LockInvalidRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool LockInvalidRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dbx1000.LockInvalidRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 page_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &page_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dbx1000.LockInvalidRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dbx1000.LockInvalidRequest)
  return false;
#undef DO_
}

void LockInvalidRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dbx1000.LockInvalidRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 page_id = 1;
  if (this->page_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->page_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dbx1000.LockInvalidRequest)
}

::google::protobuf::uint8* LockInvalidRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dbx1000.LockInvalidRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 page_id = 1;
  if (this->page_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->page_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dbx1000.LockInvalidRequest)
  return target;
}

size_t LockInvalidRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dbx1000.LockInvalidRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 page_id = 1;
  if (this->page_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->page_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LockInvalidRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dbx1000.LockInvalidRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LockInvalidRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockInvalidRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dbx1000.LockInvalidRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dbx1000.LockInvalidRequest)
    MergeFrom(*source);
  }
}

void LockInvalidRequest::MergeFrom(const LockInvalidRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dbx1000.LockInvalidRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_id() != 0) {
    set_page_id(from.page_id());
  }
}

void LockInvalidRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dbx1000.LockInvalidRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockInvalidRequest::CopyFrom(const LockInvalidRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dbx1000.LockInvalidRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockInvalidRequest::IsInitialized() const {
  return true;
}

void LockInvalidRequest::Swap(LockInvalidRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockInvalidRequest::InternalSwap(LockInvalidRequest* other) {
  using std::swap;
  swap(page_id_, other->page_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LockInvalidRequest::GetMetadata() const {
  protobuf_dbx1000_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dbx1000_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LockInvalidReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockInvalidReply::kRcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockInvalidReply::LockInvalidReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dbx1000_5fservice_2eproto::scc_info_LockInvalidReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dbx1000.LockInvalidReply)
}
LockInvalidReply::LockInvalidReply(const LockInvalidReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rc_ = from.rc_;
  // @@protoc_insertion_point(copy_constructor:dbx1000.LockInvalidReply)
}

void LockInvalidReply::SharedCtor() {
  rc_ = false;
}

LockInvalidReply::~LockInvalidReply() {
  // @@protoc_insertion_point(destructor:dbx1000.LockInvalidReply)
  SharedDtor();
}

void LockInvalidReply::SharedDtor() {
}

void LockInvalidReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LockInvalidReply::descriptor() {
  ::protobuf_dbx1000_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dbx1000_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockInvalidReply& LockInvalidReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dbx1000_5fservice_2eproto::scc_info_LockInvalidReply.base);
  return *internal_default_instance();
}


void LockInvalidReply::Clear() {
// @@protoc_insertion_point(message_clear_start:dbx1000.LockInvalidReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rc_ = false;
  _internal_metadata_.Clear();
}

bool LockInvalidReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dbx1000.LockInvalidReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool rc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dbx1000.LockInvalidReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dbx1000.LockInvalidReply)
  return false;
#undef DO_
}

void LockInvalidReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dbx1000.LockInvalidReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool rc = 1;
  if (this->rc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->rc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dbx1000.LockInvalidReply)
}

::google::protobuf::uint8* LockInvalidReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dbx1000.LockInvalidReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool rc = 1;
  if (this->rc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->rc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dbx1000.LockInvalidReply)
  return target;
}

size_t LockInvalidReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dbx1000.LockInvalidReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool rc = 1;
  if (this->rc() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LockInvalidReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dbx1000.LockInvalidReply)
  GOOGLE_DCHECK_NE(&from, this);
  const LockInvalidReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockInvalidReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dbx1000.LockInvalidReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dbx1000.LockInvalidReply)
    MergeFrom(*source);
  }
}

void LockInvalidReply::MergeFrom(const LockInvalidReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dbx1000.LockInvalidReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rc() != 0) {
    set_rc(from.rc());
  }
}

void LockInvalidReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dbx1000.LockInvalidReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockInvalidReply::CopyFrom(const LockInvalidReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dbx1000.LockInvalidReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockInvalidReply::IsInitialized() const {
  return true;
}

void LockInvalidReply::Swap(LockInvalidReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockInvalidReply::InternalSwap(LockInvalidReply* other) {
  using std::swap;
  swap(rc_, other->rc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LockInvalidReply::GetMetadata() const {
  protobuf_dbx1000_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dbx1000_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dbx1000
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dbx1000::LockGetRequest* Arena::CreateMaybeMessage< ::dbx1000::LockGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::dbx1000::LockGetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dbx1000::LockGetReply* Arena::CreateMaybeMessage< ::dbx1000::LockGetReply >(Arena* arena) {
  return Arena::CreateInternal< ::dbx1000::LockGetReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dbx1000::LockDowngradeRequest* Arena::CreateMaybeMessage< ::dbx1000::LockDowngradeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::dbx1000::LockDowngradeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dbx1000::LockDowngradeReply* Arena::CreateMaybeMessage< ::dbx1000::LockDowngradeReply >(Arena* arena) {
  return Arena::CreateInternal< ::dbx1000::LockDowngradeReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dbx1000::LockInvalidRequest* Arena::CreateMaybeMessage< ::dbx1000::LockInvalidRequest >(Arena* arena) {
  return Arena::CreateInternal< ::dbx1000::LockInvalidRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dbx1000::LockInvalidReply* Arena::CreateMaybeMessage< ::dbx1000::LockInvalidReply >(Arena* arena) {
  return Arena::CreateInternal< ::dbx1000::LockInvalidReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
